apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: userdata-template
spec:
  ## If no amiFamily is defined, Karpenter will set the default amiFamily to AL2
  # amiFamily: Bottlerocket ## Currently, Karpenter supports amiFamily values AL2, Bottlerocket, Ubuntu, Windows2019, Windows2022 and Custom.
  role: "<<KARPENTER_NODE_IAM_ROLE_NAME>>"
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: "<<CLUSTER_NAME>>"
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: "<<CLUSTER_NAME>>"
  userData:  |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash
    echo $(jq '.containerLogMaxFiles=10|.containerLogMaxSize="100Mi"' /etc/kubernetes/kubelet/kubelet-config.json) > /etc/kubernetes/kubelet/kubelet-config.json
    
    --BOUNDARY--
---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: userdata
spec:
  labels:
    intent: userdata
  requirements:
    - key: kubernetes.io/arch
      operator: In
      values: ["amd64", "arm64"]
    - key: "karpenter.k8s.aws/instance-cpu"
      operator: In
      values: ["4", "8", "16", "32", "48", "64"]
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot", "on-demand"]
    - key: karpenter.k8s.aws/instance-category
      operator: In
      values: ["c", "m", "r", "i", "d"]
  nodeClassRef:
    name: default
  kubelet:
    containerRuntime: containerd
    systemReserved:
      cpu: 100m
      memory: 5000Gi
  providerRef:
    name: userdata-template
  disruption:
      consolidationPolicy: WhenUnderutilized